generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                      Int            @id @default(autoincrement())
  nombre                  String
  tablaConductor          Boolean        @default(false)
  tablaAutomovil          Boolean        @default(false)
  tablaRuta               Boolean        @default(false)
  tablaConductorAutomovil Boolean        @default(false)
  tablaTurno              Boolean        @default(false)
  tablaPlanilla           Boolean        @default(false)
  tablaSancionConductor   Boolean        @default(false)
  tablaSancionAutomovil   Boolean        @default(false)
  tablaFecha              Boolean        @default(false)
  activo                  Boolean        @default(true)
  usuario                 String         @unique
  password                String
  tablaUsuario            Boolean        @default(false)
  tablaConfiguracion      Boolean        @default(false)
  tablaInformes           Boolean        @default(false)
  tablaProgramada         Boolean        @default(false)
  tablaPropietarios       Boolean        @default(false)
  tablaInspeccion         Boolean        @default(false)
  planillas               Planilla[]
  programaciones          Programacion[]
  turnos                  Turno[]
  despachos               FilaEspera[]
}

model Conductor {
  id                       Int                  @id @default(autoincrement())
  nombre                   String
  cedula                   String
  activo                   Boolean              @default(true)
  correo                   String?
  licenciaConduccion       DateTime?
  observaciones            String?
  telefono                 String?
  requerido                Boolean              @default(false)
  motivo                   String?
  conductorAutomovil       ConductorAutomovil[]
  programacionesRealizadas Programacion[]       @relation("ProgramacionRealizadaPorConductor")
  sancionConductor         SancionConductor[]
  turno                    Turno[]
}

model Propietario {
  id                   Int                    @id @default(autoincrement())
  nombre               String
  cedula               String
  telefono             String?
  correo               String?
  observaciones        String?
  estado               Boolean                @default(true)
  automovilPropietario AutomovilPropietario[]
}

model Automovil {
  id                       Int                    @id @default(autoincrement())
  movil                    String
  placa                    String
  activo                   Boolean                @default(true)
  disponible               Boolean                @default(true)
  enRevision               Boolean                @default(false)
  colectivo                Boolean?
  extintor                 DateTime?
  licenciaTransito         DateTime?
  revisionPreventiva       Boolean                @default(false)
  revisionTecnomecanica    DateTime?
  soat                     DateTime?
  tarjetaOperacion         DateTime?
  automovilPropietario     AutomovilPropietario[]
  conductorAutomovil       ConductorAutomovil[]
  inspecciones             Inspeccion[]
  listaChequeo             ListaChequeo[]
  planillas                Planilla[]
  programaciones           Programacion[]
  programacionesRealizadas Programacion[]         @relation("ProgramacionRealizadaPor")
  sancionAutomovil         SancionAutomovil[]
  turno                    Turno[]
}

model AutomovilPropietario {
  id            Int         @id @default(autoincrement())
  automovilId   Int
  propietarioId Int
  activo        Boolean     @default(true)
  automovil     Automovil   @relation(fields: [automovilId], references: [id])
  propietario   Propietario @relation(fields: [propietarioId], references: [id])
}

model Ruta {
  id                 Int               @id @default(autoincrement())
  nombre             String            @unique
  frecuenciaMin      Int
  frecuenciaMax      Int
  frecuenciaDefault  Int
  frecuenciaActual   Int
  unaVezDia          Boolean
  activo             Boolean           @default(true)
  descripcion        String?
  fechaCreacion      DateTime?         @default(now())
  fechaActualizacion DateTime?         @default(now())
  prioridad          Int?              @default(0)
  huecosDisponibles  HuecoDisponible[]
  programaciones     Programacion[]
  turno              Turno[]
}

model ConductorAutomovil {
  id          Int       @id @default(autoincrement())
  automovilId Int
  conductorId Int
  activo      Boolean   @default(true)
  automovil   Automovil @relation(fields: [automovilId], references: [id])
  conductor   Conductor @relation(fields: [conductorId], references: [id])
}

model Turno {
  id           Int       @id @default(autoincrement())
  movilId      Int
  conductorId  Int
  fecha        DateTime
  horaSalida   DateTime
  rutaId       Int?
  horaCreacion DateTime? @default(now())
  estado       String?   @default("PENDIENTE")
  usuarioId    Int?
  conductor    Conductor @relation(fields: [conductorId], references: [id])
  automovil    Automovil @relation(fields: [movilId], references: [id])
  ruta         Ruta?     @relation(fields: [rutaId], references: [id])
  usuario      Usuario?  @relation(fields: [usuarioId], references: [id])
}

model Planilla {
  id            Int       @id @default(autoincrement())
  fecha         DateTime
  observaciones String?
  automovilId   Int
  fechaCreacion DateTime? @default(now())
  usuarioId     Int?
  automovil     Automovil @relation(fields: [automovilId], references: [id])
  usuario       Usuario?  @relation(fields: [usuarioId], references: [id])
}

model SancionConductor {
  id          Int       @id @default(autoincrement())
  conductorId Int
  descripcion String
  fechaInicio DateTime
  fechaFin    DateTime
  conductor   Conductor @relation(fields: [conductorId], references: [id])
}

model SancionAutomovil {
  id          Int       @id @default(autoincrement())
  automovilId Int
  descripcion String
  fechaInicio DateTime
  fechaFin    DateTime
  automovil   Automovil @relation(fields: [automovilId], references: [id])
}

model HuecoDisponible {
  id     Int  @id @default(autoincrement())
  rutaId Int
  hora   Int
  ruta   Ruta @relation(fields: [rutaId], references: [id])
}

model ListaChequeo {
  id          Int       @id @default(autoincrement())
  automovilId Int
  fecha       DateTime
  items       String
  inspector   String?
  automovil   Automovil @relation(fields: [automovilId], references: [id])
}

model Programacion {
  id                      Int        @id @default(autoincrement())
  automovilId             Int?
  fecha                   DateTime
  hora                    Int
  rutaId                  Int?
  estado                  String     @default("PENDIENTE")
  usuarioId               Int?
  realizadoPorId          Int?
  realizadoPorConductorId Int?
  automovil               Automovil? @relation(fields: [automovilId], references: [id])
  realizadoPorConductor   Conductor? @relation("ProgramacionRealizadaPorConductor", fields: [realizadoPorConductorId], references: [id])
  realizadoPor            Automovil? @relation("ProgramacionRealizadaPor", fields: [realizadoPorId], references: [id])
  ruta                    Ruta?      @relation(fields: [rutaId], references: [id])
  usuario                 Usuario?   @relation(fields: [usuarioId], references: [id])
}

model Inspeccion {
  id              Int       @id @default(autoincrement())
  automovilId     Int
  fechaCreacion   DateTime  @default(now())
  observaciones   String?
  estado          String?   @default("PENDIENTE")
  inspector       String?
  nombreIngeniero String?
  cedulaIngeniero String?
  firmaDigital    String?
  aprobada        Boolean   @default(false)
  automovil       Automovil @relation(fields: [automovilId], references: [id])
}

model Configuracion {
  id            Int      @id @default(autoincrement())
  activo        Boolean  @default(true)
  fechaCreacion DateTime @default(now())
  descripcion   String?
  nombre        String
  valor         String
}

model FilaEspera {
  id               Int      @id @default(autoincrement())
  numeroMovil      String
  nombreConductor  String
  fechaCreacion    DateTime @default(now())
  estado           String   @default("ESPERANDO") // ESPERANDO, DESPACHADO, CANCELADO
  despachadoPor    Int?
  despachadoAt     DateTime?
  observaciones    String?
  ipOrigen         String?
  
  // Relación con el usuario que despachó
  usuarioDespacho  Usuario? @relation(fields: [despachadoPor], references: [id])
}
