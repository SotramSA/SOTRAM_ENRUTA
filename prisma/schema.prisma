generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                    Int    @id @default(autoincrement())
  usuario               String @unique
  password              String
  nombre                String
  activo                Boolean @default(true)
  tablaConductor        Boolean @default(false)
  tablaAutomovil        Boolean @default(false)
  tablaRuta             Boolean @default(false)
  tablaConductorAutomovil Boolean @default(false)
  tablaTurno            Boolean @default(false)
  tablaPlanilla         Boolean @default(false)
  tablaSancionConductor Boolean @default(false)
  tablaSancionAutomovil Boolean @default(false)
  tablaFecha            Boolean @default(false)
  tablaUsuario          Boolean @default(false)
  tablaConfiguracion    Boolean @default(false)
  tablaInformes         Boolean @default(false)
  tablaPropietarios     Boolean @default(false)
  tablaProgramada       Boolean @default(false)
  programaciones        Programacion[]
  turnos               Turno[]
}

model Conductor {
  id                 Int                  @id @default(autoincrement())
  nombre             String
  cedula             String
  activo             Boolean              @default(true)
  correo             String?
  observaciones      String?
  telefono           String?
  licenciaConduccion DateTime?
  conductorAutomovil ConductorAutomovil[]
  sancionConductor   SancionConductor[]
  turno              Turno[]
}

model Propietario {
  id                   Int                    @id @default(autoincrement())
  nombre               String
  cedula               String
  telefono             String?
  correo               String?
  observaciones        String?
  estado               Boolean                @default(true)
  automovilPropietario AutomovilPropietario[]
}

model Automovil {
  id                    Int                    @id @default(autoincrement())
  movil                 String
  placa                 String
  activo                Boolean                @default(true)
  disponible            Boolean                @default(true)
  soat                  DateTime?
  revisionTecnomecanica DateTime?
  tarjetaOperacion      DateTime?
  licenciaTransito      DateTime?
  extintor              DateTime?
  revisionPreventiva    DateTime?
  automovilPropietario  AutomovilPropietario[]
  conductorAutomovil    ConductorAutomovil[]
  listaChequeo          ListaChequeo[]
  sancionAutomovil      SancionAutomovil[]
  turno                 Turno[]
  planillas             Planilla[]
  programaciones        Programacion[]
}

model AutomovilPropietario {
  id            Int         @id @default(autoincrement())
  automovilId   Int
  propietarioId Int
  activo        Boolean     @default(true)
  automovil     Automovil   @relation(fields: [automovilId], references: [id])
  propietario   Propietario @relation(fields: [propietarioId], references: [id])
}

model Ruta {
  id                 Int               @id @default(autoincrement())
  nombre             String            @unique
  frecuenciaMin      Int
  frecuenciaMax      Int
  frecuenciaDefault  Int
  frecuenciaActual   Int
  unaVezDia          Boolean
  activo             Boolean           @default(true)
  descripcion        String?
  fechaCreacion      DateTime?         @default(now())
  fechaActualizacion DateTime?         @default(now())
  prioridad          Int?              @default(0)
  huecosDisponibles  HuecoDisponible[]
  turno              Turno[]
  programaciones     Programacion[]
}

model ConductorAutomovil {
  id          Int       @id @default(autoincrement())
  automovilId Int
  conductorId Int
  activo      Boolean   @default(true)
  automovil   Automovil @relation(fields: [automovilId], references: [id])
  conductor   Conductor @relation(fields: [conductorId], references: [id])
}

model Turno {
  id           Int       @id @default(autoincrement())
  movilId      Int
  conductorId  Int
  fecha        DateTime
  horaSalida   DateTime
  rutaId       Int?
  horaCreacion DateTime? @default(now())
  estado       String?   @default("PENDIENTE")
  usuarioId    Int?
  automovil    Automovil @relation(fields: [movilId], references: [id])
  conductor    Conductor @relation(fields: [conductorId], references: [id])
  ruta         Ruta?     @relation(fields: [rutaId], references: [id])
  usuario      Usuario?  @relation(fields: [usuarioId], references: [id])
}

model Planilla {
  id          Int       @id @default(autoincrement())
  automovilId Int
  fecha       DateTime
  observaciones String?
  automovil   Automovil @relation(fields: [automovilId], references: [id])
}

model SancionConductor {
  id          Int       @id @default(autoincrement())
  conductorId Int
  fecha       DateTime
  descripcion String
  monto       Float
  conductor   Conductor @relation(fields: [conductorId], references: [id])
}

model SancionAutomovil {
  id          Int       @id @default(autoincrement())
  automovilId Int
  fecha       DateTime
  descripcion String
  monto       Float
  automovil   Automovil @relation(fields: [automovilId], references: [id])
}

model HuecoDisponible {
  id     Int  @id @default(autoincrement())
  rutaId Int
  hora   Int
  ruta   Ruta @relation(fields: [rutaId], references: [id])
}

model ListaChequeo {
  id          Int       @id @default(autoincrement())
  automovilId Int
  fecha       DateTime
  inspector   String?   // Nombre del inspector que realiz√≥ la lista de chequeo
  items       String    // JSON string
  automovil   Automovil @relation(fields: [automovilId], references: [id])
}

model Programacion {
  id          Int       @id @default(autoincrement())
  automovilId Int
  fecha       DateTime
  hora        Int
  rutaId      Int?
  estado      String    @default("PENDIENTE")
  automovil   Automovil @relation(fields: [automovilId], references: [id])
  ruta        Ruta?     @relation(fields: [rutaId], references: [id])
  usuario     Usuario?  @relation(fields: [usuarioId], references: [id])
  usuarioId   Int?
}

model Configuracion {
  id          Int       @id @default(autoincrement())
  nombre      String
  valor       String
  activo      Boolean   @default(true)
  descripcion String?
  fechaCreacion DateTime @default(now())
}
