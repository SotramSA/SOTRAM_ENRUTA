generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Conductor {
  id                 Int                  @id @default(autoincrement())
  nombre             String
  cedula             String
  activo             Boolean              @default(true)
  correo             String?
  observaciones      String?
  telefono           String?
  licenciaConduccion DateTime?
  conductorAutomovil ConductorAutomovil[]
  sancionConductor   SancionConductor[]
  turno              Turno[]
}

model Propietario {
  id                   Int                    @id @default(autoincrement())
  nombre               String
  cedula               String
  telefono             String?
  correo               String?
  observaciones        String?
  estado               Boolean                @default(true)
  automovilPropietario AutomovilPropietario[]
}

model Automovil {
  id                    Int                    @id @default(autoincrement())
  movil                 String
  placa                 String
  activo                Boolean                @default(true)
  disponible            Boolean                @default(true)
  soat                  DateTime?
  revisionTecnomecanica DateTime?
  tarjetaOperacion      DateTime?
  licenciaTransito      DateTime?
  extintor              DateTime?
  revisionPreventiva    DateTime?
  revisionAnual         DateTime?
  automovilPropietario  AutomovilPropietario[]
  conductorAutomovil    ConductorAutomovil[]
  listaChequeo          ListaChequeo[]
  planilla              Planilla[]
  programaciones        Programacion[]
  sancionAutomovil      SancionAutomovil[]
  turno                 Turno[]
}

model AutomovilPropietario {
  id            Int         @id @default(autoincrement())
  automovilId   Int
  propietarioId Int
  activo        Boolean     @default(true)
  automovil     Automovil   @relation(fields: [automovilId], references: [id])
  propietario   Propietario @relation(fields: [propietarioId], references: [id])
}

model Ruta {
  id                 Int               @id @default(autoincrement())
  nombre             String            @unique
  frecuenciaMin      Int
  frecuenciaMax      Int
  frecuenciaDefault  Int
  frecuenciaActual   Int
  unaVezDia          Boolean
  activo             Boolean           @default(true)
  descripcion        String?
  fechaCreacion      DateTime?         @default(now())
  fechaActualizacion DateTime?         @default(now()) @updatedAt
  prioridad          Int?              @default(0)
  huecosDisponibles  HuecoDisponible[]
  turno              Turno[]
}

model ConductorAutomovil {
  id          Int       @id @default(autoincrement())
  automovilId Int
  conductorId Int
  activo      Boolean   @default(true)
  automovil   Automovil @relation(fields: [automovilId], references: [id])
  conductor   Conductor @relation(fields: [conductorId], references: [id])
}

model Turno {
  id           Int       @id @default(autoincrement())
  movilId      Int
  conductorId  Int
  fecha        DateTime
  horaSalida   DateTime
  rutaId       Int?
  horaCreacion DateTime? @default(now())
  estado       String?   @default("PENDIENTE")
  usuarioId    Int?
  conductor    Conductor @relation(fields: [conductorId], references: [id])
  movil        Automovil @relation(fields: [movilId], references: [id])
  ruta         Ruta?     @relation(fields: [rutaId], references: [id], onDelete: Restrict)
  usuario      Usuario?  @relation(fields: [usuarioId], references: [id], onUpdate: NoAction)
}

model SancionConductor {
  id          Int       @id @default(autoincrement())
  conductorId Int
  fechaInicio DateTime
  fechaFin    DateTime
  motivo      String
  conductor   Conductor @relation(fields: [conductorId], references: [id])
}

model SancionAutomovil {
  id          Int       @id @default(autoincrement())
  automovilId Int
  fechaInicio DateTime
  fechaFin    DateTime
  motivo      String
  automovil   Automovil @relation(fields: [automovilId], references: [id])
}

model Planilla {
  id      Int       @id @default(autoincrement())
  fecha   DateTime
  movilId Int
  activo  Boolean   @default(true)
  movil   Automovil @relation(fields: [movilId], references: [id])
}

model Usuario {
  id                      Int            @id @default(autoincrement())
  nombre                  String
  tablaConductor          Boolean        @default(false)
  tablaAutomovil          Boolean        @default(false)
  tablaRuta               Boolean        @default(false)
  tablaConductorAutomovil Boolean        @default(false)
  tablaTurno              Boolean        @default(false)
  tablaPlanilla           Boolean        @default(false)
  tablaSancionConductor   Boolean        @default(false)
  tablaSancionAutomovil   Boolean        @default(false)
  tablaFecha              Boolean        @default(false)
  activo                  Boolean        @default(true)
  usuario                 String
  password                String
  tablaUsuario            Boolean        @default(false)
  tablaConfiguracion      Boolean        @default(false)
  tablaInformes           Boolean        @default(false)
  tablaProgramada         Boolean        @default(false)
  tablaPropietarios       Boolean        @default(false)
  programaciones          Programacion[]
  turnos                  Turno[]
}

model Configuracion {
  id                   Int      @id @default(autoincrement())
  frecuenciaAutomatica Boolean  @default(true)
  tiempoMinimoSalida   Int      @default(2)
  tiempoMaximoTurno    Int      @default(45)
  activo               Boolean  @default(true)
  fechaCreacion        DateTime @default(now())
  fechaActualizacion   DateTime @default(now()) @updatedAt
  impresionDirecta     Boolean? @default(false)
  impresoraHabilitada  Boolean? @default(false)
  nombreImpresora      String?
}

model TimeSimulation {
  id                 Int      @id @default(autoincrement())
  horaSimulada       DateTime
  activo             Boolean  @default(true)
  fechaCreacion      DateTime @default(now())
  fechaActualizacion DateTime @default(now()) @updatedAt
}

model HuecoDisponible {
  id                  Int      @id @default(autoincrement())
  rutaId              Int
  rutaNombre          String
  horaSalida          DateTime
  prioridad           String
  razon               String
  frecuenciaCalculada Int
  fecha               DateTime @default(now())
  activo              Boolean  @default(true)
  fechaCreacion       DateTime @default(now())
  fechaActualizacion  DateTime @default(now()) @updatedAt
  ruta                Ruta     @relation(fields: [rutaId], references: [id], onDelete: Cascade)
}

model Programacion {
  id         Int       @id @default(autoincrement())
  fecha      DateTime
  ruta       String
  hora       String
  movilId    Int
  usuarioId  Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  disponible Boolean   @default(false)
  movil      Automovil @relation(fields: [movilId], references: [id])
  usuario    Usuario?  @relation(fields: [usuarioId], references: [id])
}

model ListaChequeo {
  id      Int       @id @default(autoincrement())
  fecha   DateTime  @default(now())
  nombre  String
  movilId Int
  movil   Automovil @relation(fields: [movilId], references: [id])
}
